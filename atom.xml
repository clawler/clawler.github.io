<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Casey Lawler]]></title>
  <link href="http://clawler.github.io/atom.xml" rel="self"/>
  <link href="http://clawler.github.io/"/>
  <updated>2015-04-04T23:21:14-07:00</updated>
  <id>http://clawler.github.io/</id>
  <author>
    <name><![CDATA[Casey Lawler]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA['Chrome Behaving Weirdly']]></title>
    <link href="http://clawler.github.io/blog/2014/09/23/chrome-slashes/"/>
    <updated>2014-09-23T23:48:43-07:00</updated>
    <id>http://clawler.github.io/blog/2014/09/23/chrome-slashes</id>
    <content type="html"><![CDATA[<p>Tossing this into the random-stuff-I-learned-today bucket.</p>

<p>Today I was messing around with Google Chrome, and I found out that unlike
Firefox and Safari, it <a href="https://code.google.com/p/chromium/issues/detail?id=346083">treats frontslashes the same way as backslashes in hrefs</a>.</p>

<p>A Chromium developer offers their thoughts on this:</p>

<blockquote><p>&hellip;the backslash was intended to provide compatibility for a Windows world, and
[Chrome will] take a more-or-less arbitrary number of initial slashes
following the colon in some cases.</p></blockquote>

<p>Try clicking the following links in Firefox, Safari, and Chrome to get a better
sense of what this means:</p>

<p><a href="http://google.com">&lt;a href=&ldquo;http://google.com&rdquo;></a></p>

<p><a href="http:\\google.com">&lt;a href=&ldquo;http:&#92;google.com&rdquo;></a></p>

<p><a href="http:////\google.com">&lt;a href=&ldquo;http:\//\//\google.com&rdquo;></a></p>

<p><a href="//google.com">&lt;a href=&ldquo;//google.com&rdquo;></a></p>

<p><a href="\\google.com">&lt;a href=&ldquo;&#92;google.com&rdquo;></a></p>

<p><a href="////\google.com">&lt;a href=&ldquo;\//\//\google.com&rdquo;></a></p>

<p>lolwut?</p>

<p>Now, this is admittedly super contextual, but this could mean the difference
between a URI filter spitting out malformed garbage that doesn&rsquo;t link properly
and that same URI filter spitting out a valid link in Chrome. Construct your
whitelists and filters with care!</p>

<p>I&rsquo;ve hardly ever had reason to question Chrome&rsquo;s behavior and my eyes glaze
over re: Windows compatibility, but this is a great reminder that
browsers do have their subtle differences which sometimes manifest in
surprising ways.</p>

<p>Pretty unrelated: I also stumbled upon <a href="http://garage4hackers.com">Garage4Hackers</a>
which I didn&rsquo;t know is a thing. Might be worth checking out if you&rsquo;re into
security stuff.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA['Unpacking Gems']]></title>
    <link href="http://clawler.github.io/blog/2014/09/22/unpacking-gems/"/>
    <updated>2014-09-22T13:21:55-07:00</updated>
    <id>http://clawler.github.io/blog/2014/09/22/unpacking-gems</id>
    <content type="html"><![CDATA[<p>This might be pretty obvious to more seasoned Rubyites, but I&rsquo;m making a note
of it here because this was news to me.</p>

<p>I often come across gems whose source code I want to read.</p>

<p>In a pinch, I&rsquo;ll head to <a href="https://rubygems.org">RubyGems</a>, find the gem that
I&rsquo;m looking for, get linked to the repo, and view the gem&rsquo;s source code through
my web browser, typically with GitHub&rsquo;s web viewer.</p>

<p>If I need to roll my sleeves up and I want to mess with the gem source, then
I&rsquo;d have to find a git clone link, switch back to my terminal, run git clone,
check out the appropriate git tag for the version of the gem that I want to
examine, etc. This can be a drag, and most of the time I&rsquo;m not looking to
contribute - I just want to read the source more comfortably.</p>

<p>You can unpack gems to your current working directory and browse their source
code from the comfort of your text editor with this incantation:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem unpack [gem_name]</span></code></pre></td></tr></table></div></figure>


<p>Note that if you have multiple versions of a given gem installed at once, you
can specify the version to unpack or have it default to the highest installed
version number.</p>

<p>Visit <a href="http://stackoverflow.com/questions/10453249/viewing-a-gems-source-code">this SO page</a>
for more details, but here are the important bits from the help output:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Usage: gem unpack GEMNAME [options]
</span><span class='line'>
</span><span class='line'>  Options:
</span><span class='line'>        --target=DIR                 target directory for unpacking
</span><span class='line'>        --spec                       unpack the gem specification
</span><span class='line'>    -v, --version VERSION            Specify version of gem to unpack
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  Common Options:
</span><span class='line'>    -h, --help                       Get help on this command
</span><span class='line'>    -V, --[no-]verbose               Set the verbose level of output
</span><span class='line'>    -q, --quiet                      Silence commands
</span><span class='line'>        --config-file FILE           Use this config file instead of default
</span><span class='line'>        --backtrace                  Show stack backtrace on errors
</span><span class='line'>        --debug                      Turn on Ruby debugging
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  Arguments:
</span><span class='line'>    GEMNAME       name of gem to unpack
</span><span class='line'>
</span><span class='line'>  Summary:
</span><span class='line'>    Unpack an installed gem to the current directory</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
